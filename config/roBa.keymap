#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        PairSquareBrackets: PairSquareBrackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET &kp NON_US_HASH &kp LEFT>;
            label = "PAIRSQUAREBRACKETS";
        };

        PairParentheses: PairParentheses {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(N8) &kp LS(N9) &kp LEFT>;
            label = "PAIRPARENTHESES";
        };

        PairCurlyBrackets: PairCurlyBrackets {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(RIGHT_BRACKET) &kp LS(NON_US_HASH) &kp LEFT>;
            label = "PAIRCURLYBRACKETS";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        BTorMouseLayer: BTorMouseLayer {
            compatible = "zmk,behavior-hold-tap";
            label = "BTORMOUSELAYER";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ShiftORLeftClick: ShiftORLeftClick {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFTORLEFTCLICK";
            bindings = <&kp>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        DefaultLayer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R                      &kp T                                             &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A      &kp S         &kp D         &kp F                      &kp G        &kp LS(LG(S))       &kp DELETE       &kp H        &kp J  &kp K      &kp L    &kp MINUS
&kp Z      &kp X         &kp C         &kp V                      &kp B        &kp ESCAPE          &kp RIGHT_SHIFT  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &mt LEFT_SHIFT LANGUAGE_2  &lt 1 SPACE  &lt 2 LANGUAGE_1    &kp BACKSPACE    &lt 6 ENTER                             &BTorMouseLayer 7 4
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        Symbol {
            bindings = <
&kp LS(N7)        &kp LS(NUMBER_2)  &kp EXCLAMATION  &kp QUESTION             &kp LS(EQUAL)                           &kp INTERNATIONAL_3  &kp LS(INTERNATIONAL_1)  &mkp MCLK  &none      &kp LS(N5)
&kp LS(NUMBER_6)  &kp SEMICOLON     &kp DOLLAR       &none                    &kp LS(LEFT_BRACKET)  &none     &none   &kp EQUAL            &mkp LCLK                &mo 5      &mkp RCLK  &none
&none             &none             &kp SQT          &kp LS(INTERNATIONAL_3)  &kp INTERNATIONAL_3   &none     &none   &kp LS(NUMBER_3)     &kp LEFT_BRACKET         &none      &none      &none
&trans            &trans            &trans           &trans                   &trans                &trans    &trans  &trans                                                              &trans
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        FunctionAndMove {
            bindings = <
&none   &kp F7  &kp F8  &kp F9  &kp F10                    &none   &kp HOME  &kp INS       &kp END    &none
&none   &kp F4  &kp F5  &kp F6  &kp F11  &trans    &trans  &none   &none     &kp UP_ARROW  &none      &kp TAB
&none   &kp F1  &kp F2  &kp F3  &kp F12  &trans    &trans  &none   &kp LEFT  &kp DOWN      &kp RIGHT  &kp PRINTSCREEN
&trans  &trans  &trans  &trans  &trans   &trans    &trans  &trans                                     &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        Layer3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;
        };

        Mouse {
            bindings = <
&none   &none   &none   &none   &none                     &none   &none      &mkp MCLK  &none      &none
&none   &none   &none   &none   &none   &trans    &trans  &none   &mkp LCLK  &mo 5      &mkp RCLK  &none
&none   &none   &none   &none   &none   &trans    &trans  &none   &none      &none      &none      &none
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN>;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;
        };

        NumAndBracket {
            bindings = <
&none            &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS                     &kp RIGHT_BRACKET      &kp NON_US_HASH      &none          &none           &PairSquareBrackets
&kp KP_ASTERISK  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS    &trans    &trans  &kp LS(N8)             &kp LS(N9)           &none          &none           &PairParentheses
&kp KP_DIVIDE    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp LS(MINUS)  &trans    &trans  &kp LS(RIGHT_BRACKET)  &kp LS(NON_US_HASH)  &kp LS(COMMA)  &kp LS(PERIOD)  &PairCurlyBrackets
&none            &kp KP_NUMBER_0  &kp KP_DOT       &trans           &trans         &trans    &trans  &trans                                                                     &trans
            >;
        };

        Bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans                        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_CLR  &trans        &trans        &trans        &bt BT_PRV    &bt BT_NXT
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &trans                                                  &trans
            >;
        };
    };
};
